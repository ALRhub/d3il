hydra:
  run:
    dir: ${log_dir}/runs/${agent_name}/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: ${log_dir}/sweeps/${agent_name}/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.override_dirname}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra: []
    task:
    - seed=0,1,2,3,4,5
    - agents=bc_agent
    - agent_name=bc
    - window_size=1
    - group=avoiding_bc_seeds
  job:
    name: run
    override_dirname: agent_name=bc,agents=bc_agent,group=avoiding_bc_seeds,seed=0,1,2,3,4,5,window_size=1
    id: ???
    num: ???
    config_name: avoiding_config
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.1.1
    cwd: /home/david/CoRL_benchmark/code_refine/d3il
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /home/david/CoRL_benchmark/code_refine/d3il/configs
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    choices:
      agents: bc_agent
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
agents:
  _target_: agents.bc_agent.BCAgent
  _recursive_: false
  model:
    _target_: agents.bc_agent.BCPolicy
    _recursive_: false
    visual_input: false
    device: ${device}
    model:
      _target_: agents.models.common.mlp.ResidualMLPNetwork
      input_dim: ${obs_dim}
      hidden_dim: ${hidden_dim}
      num_hidden_layers: ${num_hidden_layers}
      output_dim: ${action_dim}
      dropout: 0
      activation: Mish
      use_spectral_norm: false
      use_norm: false
      norm_style: BatchNorm
      device: ${device}
    obs_encoder:
      _target_: torch.nn.Identity
      output_dim: ${obs_dim}
  trainset: ${trainset}
  valset: ${valset}
  optimization:
    _target_: torch.optim.Adam
    lr: 0.001
    weight_decay: 0
  train_batch_size: ${train_batch_size}
  val_batch_size: ${val_batch_size}
  num_workers: ${num_workers}
  epoch: ${epoch}
  device: ${device}
  scale_data: ${scale_data}
  eval_every_n_epochs: ${eval_every_n_epochs}
agent_name: bc
log_dir: logs/avoiding/
data_directory: environments/dataset/data/avoiding/data
wandb:
  entity: davidjia
  project: d3il
group: avoiding_bc_seeds
seed: 42
hidden_dim: 128
num_hidden_layers: 6
n_layer: 4
n_head: 4
n_embd: 72
train_batch_size: 1024
val_batch_size: 1024
num_workers: 4
device: cuda
epoch: 1
eval_every_n_epochs: 1
scale_data: true
obs_dim: 4
action_dim: 2
max_len_data: 200
window_size: 1
trainset:
  _target_: environments.dataset.avoiding_dataset.Avoiding_Dataset
  data_directory: ${data_directory}
  obs_dim: ${obs_dim}
  action_dim: ${action_dim}
  max_len_data: ${max_len_data}
  window_size: ${window_size}
valset:
  _target_: environments.dataset.avoiding_dataset.Avoiding_Dataset
  data_directory: ${data_directory}
  obs_dim: ${obs_dim}
  action_dim: ${action_dim}
  max_len_data: ${max_len_data}
  window_size: ${window_size}
simulation:
  _target_: simulation.avoiding_sim.Avoiding_Sim
  seed: ${seed}
  device: ${device}
  render: true
  n_cores: 1
  n_trajectories: 100
